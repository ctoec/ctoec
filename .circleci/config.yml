version: 2

orbs:
  percy: percy/agent@0.1.2

jobs:
  build:
    docker:
      - image: circleci/php:7.3
      - image: circleci/mariadb:10.3.4-ram
        environment:
          MARIADB_USER: root
          MARIADB_DB: wordpress

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run:
          name: Update dependencies
          command: |
            sudo apt-get update -q
            sudo apt install -y mysql-client

      - run:
          name: Creating database
          command: |
            function dbIsDown { mysqladmin -h 127.0.0.1 -u root status  > /dev/null 2>&1 && echo "$?"; }

            while [ -z $(dbIsDown)  ]; do
                echo "waiting for mysql to start working"
                sleep 3s
            done

            mysql -h 127.0.0.1 -u root -e "create database wordpress;"

      - run:
          name: Install WP-CLI and WP Core
          command: |
            set -x
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            ./wp-cli.phar core download --path=wordpress

      - run:
          name: Creating WP config file
          command: ./wp-cli.phar config create --allow-root --dbname=wordpress --dbuser=root --dbhost=127.0.0.1 --path=wordpress

      - run:
          name: Installing WP themes and plugins via Composer
          command: sudo composer self-update && composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - persist_to_workspace:
          root: .
          paths:
            - wordpress

  run-visual-tests:
    docker:
      - image: node
    environment:
      PERCY_PARALLEL_TOTAL: "-1"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: |
          apt-get update && \
            apt-get -y install xvfb gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 \
            libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 \
            libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 \
            libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 \
            libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget && \
            rm -rf /var/lib/apt/lists/*
      - run: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npx percy exec -- node ./tests/percy-snapshots.js
      - run: npx percy finalize -a

  validate-compliance:
    docker:
      - image: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run: |
          echo "Checking Compliance"
          npm run check-compliance


  deploy-production:
    docker:
      - image: circleci/php:7.3
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Update dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y lftp
      - run:
          name: Publish to Prod
          command: |
            lftp sftp://${SFTP_USERNAME}:${SFTP_PASSWORD}@${SFTP_HOSTNAME} -e "set ssl: verify-certificate no; set sftp:auto-confirm yes; mirror --exclude _dev/ -v -R ./wordpress/wp-content/themes/${THEME_NAME} ${SITE_PATH}/wp-content/themes/${THEME_NAME}; quit"

workflows:
  version: 2
  main:
    jobs:
      - build
      - validate-compliance
      - run-visual-tests:
          requires:
            - build
            - validate-compliance
      - deploy-production:
          requires:
            - run-visual-tests
          filters:
            branches:
              only: prod
