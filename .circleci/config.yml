version: 2

orbs:
  percy: percy/agent@0.1.2

jobs:

  validate-compliance:
    docker:
      - image: stateofct/ctoec-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run: |
          echo "Checking Compliance"
          npm run check-compliance

  build:
    docker:
      - image: stateofct/ctoec-php
      - image: circleci/mariadb:10.3.4-ram
        environment:
          MARIADB_USER: root
          MARIADB_DB: wordpress

    steps:
      - checkout
      - run:
          name: Create database
          command: |
            function dbIsDown { mysqladmin -h 127.0.0.1 -u root status  > /dev/null 2>&1 && echo "$?"; }

            while [ -z $(dbIsDown)  ]; do
                echo "waiting for mysql to start working"
                sleep 3s
            done

            mysql -h 127.0.0.1 -u root -e "create database wordpress;"

      - run:
          name: Install WP-CLI and WP Core
          command: |
            set -x
            wp core download --path=wordpress

      - run:
          name: Creating WP config file
          command: wp config create --allow-root --dbname=wordpress --dbuser=root --dbhost=127.0.0.1 --path=wordpress

      - run:
          name: Installing WP themes and plugins via Composer
          command: sudo composer self-update && composer install -n --prefer-dist

      - persist_to_workspace:
          root: .
          paths:
            - wordpress/*

  deploy-staging:
    docker:
      - image: stateofct/ctoec-php
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Change theme to dev
          command: |
            cd wordpress/wp-content/themes/ctoec
            git checkout dev
            rm -rf wordpress/wp-content/themes/ctoec/.git
      - run:
          name: Publish to Staging
          command: |
            lftp sftp://${STAGING_SFTP_USERNAME}:${STAGING_SFTP_PASSWORD}@${STAGING_SFTP_HOSTNAME} -e "set ssl: verify-certificate no; set sftp:auto-confirm yes; mirror --exclude _dev/ -v -R ./wordpress/wp-content/themes/${THEME_NAME} ${STAGING_SITE_PATH}/wp-content/themes/${THEME_NAME}; quit"

  check-accessibility-lighthouse:
    docker:
      - image: node:alpine
    environment:
      PERCY_PARALLEL_TOTAL: "-1"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
      - run: |
           apk add chromium
      - run: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Run Lighthouse
          command: |
            if [ -z ${CIRCLE_PULL_REQUEST+x} ]; then exit 0; else echo "Run on PRs"; fi
            npx lighthouse-ci http://stage.ctoec.org --quiet --chrome-flags="--headless" --accessibility=100

  run-visual-tests:
    docker:
      - image: stateofct/ctoec-node
    environment:
      PERCY_PARALLEL_TOTAL: "-1"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Run Percy
          command: |
            if [ -z ${CIRCLE_PULL_REQUEST+x} ]; then exit 0; else echo "Run on PRs"; fi
            npx percy exec -- node ./tests/percy-snapshots.js
            npx percy finalize -a

  deploy-production:
    docker:
      - image: stateofct/ctoec-php
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publish to Prod
          command: |
            lftp sftp://${SFTP_USERNAME}:${SFTP_PASSWORD}@${SFTP_HOSTNAME} -e "set ssl: verify-certificate no; set sftp:auto-confirm yes; mirror --exclude _dev/ -v -R ./wordpress/wp-content/themes/${THEME_NAME} ${SITE_PATH}/wp-content/themes/${THEME_NAME}; quit"

workflows:
  version: 2
  commit:
    jobs:
      - validate-compliance
      - build
      - deploy-staging:
          requires:
            - build
            - validate-compliance
      - run-visual-tests:
          requires:
            - deploy-staging
      -  check-accessibility-lighthouse:
           requires:
            - deploy-staging     
      - deploy-production:
          requires:
            - run-visual-tests
          filters:
            branches:
              only: prod
  nightly:
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - dev
    jobs:
      - validate-compliance